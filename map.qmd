---
output: html_document
editor_options: 
  chunk_output_type: console
---


# 공간정보

지리학(Geography)은 가장 오래된 과학 중 하나로 꼽히며, 
학생때부터 교실 여기저기에서 볼 수 있는 지도는 처음 접한 데이터 시각화 산출물이다.
지리학은 지구의 곡률을 정확히 파악하여 지구의 크기와 모양, 중력에 대한 이해를 높이는 데 중요한 역할을 
수행했을 뿐만 아니라 대항해 시대 지도가 매우 큰 기여를 했다.

현대에 와서 지리학 데이터의 응용 범위는 더욱 확장되어, 
민간과 국방 범위를 가리지 않고 입점위치 선정, 우주 탐사, 군사 작전, 인구이동 패턴 분석 등 다방면에서 매우 요긴한 역할을 수행하고 있다. **지리정보시스템(GIS)**은 공간 위치를 분석하고 정보를 지도와 3D로 시각화하여 데이터 패턴, 관계, 상황 등을 심도 깊은 이해를 통해 의사결정을 지원한다.

**지도학(Cartography)**은 지도를 그리는 실무분야로 
대표적으로 벡터 데이터 형식으로 `Shapefile`로 점, 다각형, 선으로 지리적 정보를 표현했지만,
GIS에 오픈소스 소프트웨어 문화가 침투하면서 `Geopackage`, `GeoJSON`, `KML`과 같은 다른 파일형식도 인기를 
얻고 있다. GIS 데이터는 지도 뿐만 아니라 다른 형태의 정형 데이터와 결합한 교차분석이 
일반화되면서 R 혹은 파이썬 데이터 조작 기능도 더불어 부각되고 있다.


**벡터(Vector)**와 **래스터(Raster)** 데이터는 GIS에서 큰 축을 담당하는 데이터 형식이다. 
벡터 데이터가 점, 선, 다각형 등의 기하학적 형태로 구성되어 주로 경계선이나 위치 정보 등을 정확하게 표현할 때 사용되는 반면, 래스터 데이터는 픽셀이나 셀 배열로 정보를 표현한다는 점에서 차이가 난다.
각 픽셀은 고유값을 가지며, 색상, 높이, 밀도 등 다양한 형태 정보를 표현할 수 있다. 

GIS에서 데이터는 계층(레이어, Layer)별로 나눠 표현되고 이를 결합하여 공간정보를 지도형태로 얻을 수 있다.
한 구획의 토지(parcle), 공간 정보를  점, 선, 다각형 같은 벡터 데이터로 표현하고 비공간 정보 소유권, 토지 이용, 구역 분류, 평가 가치 등 다양한 속성(칼럼) 데이터프레임과 결합한 후 후속 분석과 모형개발 작업을 수행하는 것이 일반적이다. 

[^layers]: [Want to learn more about GIS?](https://inyo-monowater.org/resources/giswhat/)

![GIS 벡터와 래스터 계층 사례](images/gis_layers.png)

지도 자체가 불가피하게 왜곡된 현실을 시각적으로 표현하기 때문에 '현실의 축소판'(Maps are scale models of reality)이라고 할 수 있다. 예를 들어, 사과 껍질을 벗겨 펼친 것처럼, 평면화시켜 지도를 제작한다. 특히, **지리 좌표계(Geographic Coordinate System)**와 **투영 좌표계(Projected Coordinate System)**는 지도 작성과 공간 분석에서 중요한 개념이다. 간단히 요약하면, 지리 좌표계는 정확한 위치 정보를 제공하는 반면, 투영 좌표계는 거리와 면적 측정에 더 적합하다. 

지리 좌표계는 지구상 위치를 설명하며, 지구가 둥글기 때문에 주로 각도 단위로 측정되고, 기준점에 상관없이 위치가 달라지지 않으므로 절대 좌표계다. 투영 좌표계는 지리 좌표계를 평면화한 것으로, 투영 좌표계를 사용할 경우 직선을 이용해 거리를 측정할 수 있어, 토지 이용 계획, 건물 배치, 거리 측정 등에서 유용하다. 

## 도구 패키지

![`sf` 패키지와 의존성 - 화살표는 강한 의존성, 점선 화살표는 약한 의존성](images/sf_deps.png)

`GDAL`, `GEOS`, `PROJ`, `liblwgeom`, `s2geometry`, `NetCDF`, `udunits2`는 
C/C++ 라이브러리를 개발, 유지보수, 지원하는 커뮤니티가 존재하는 반면 R, 파이썬,
줄리아(Julia), 자바스크립트는 대화형 인터페이스를 통해 라이브러리를 활용하는 
커뮤니티도 존재한다. [@sds]

`GDAL` (Geospatial Data Abstraction Library) 라이브러리는 
공간 데이터 처리에 있어 멀티툴의 대명사인 스위스군 칼(SAK, Swiss Army Knife)이라는 별명을 갖고 있고 100개가 넘는 다른 라이브러리와 연결되어 다양한 공간 데이터를 불러오고, 처리하고, 내보내는 기능을 제공한다.

`PROJ`는 지도 투영 및 데이터 변환을 위한 라이브러리로, 하나의 좌표계에서 다른 좌표계로  좌표를 변환할 때 유용하다. 

`GEOS` (Geometry Engine Open Source)와 `s2geometry` 라이브러리는 기하학 연산에 사용하며, 길이, 면적, 거리를 측정하거나 연산작업에 사용되며 $R^2$로 표기되며 `GEOS`는 평평한 2차원 공간에, $S^2$로 표기되며 `s2geometry`는 구형 공간에 사용한다.

`NetCDF`는 파일 형식이며 C 라이브러리로, 어떤 차원 배열도 정의할 수 있으며 특히 (기후) 모형개발 커뮤니티에서 널리 사용된다. `Udunits2`는 측정 단위의 데이터베이스 및 소프트웨어 라이브러리로, 단위의 변환과 파생 단위, 사용자 정의 단위를 처리한다. `liblwgeom`은 PostGIS 구성 요소로, `GDAL`, `GEOS`에서 누락된 몇 가지 루틴을 포함한다.


![](images/gis_evolution.jpg)


## 사례

```{r}
library(sf)
library(tidyverse)
sf_use_s2(FALSE)

## 지도
korea_map <- read_sf("../map_challenge/data/HangJeongDong_ver20230401.geojson")

sido_map <- korea_map |> 
  group_by(sidonm) |> 
  summarise(geometry = sf::st_union(geometry))

## 23년 7월 인구수(KOSIS) 행정구역별, 성별 인구수

pop_tbl <- read_csv("data/행정구역_시군구_별__성별_인구수_20230831223248.csv",
         locale=locale(encoding="euc-kr"), skip = 1) |> 
  janitor::clean_names(ascii = FALSE) |> 
  set_names(c("sidonm", "인구수")) |> 
  mutate(sidonm = if_else(sidonm == "강원특별자치도", "강원도", sidonm))

sido_map |> 
  left_join(pop_tbl) |> 
  ggplot() +
    geom_sf(aes(geometry = geometry, fill = cut(인구수, 10)), show.legend = FALSE) +
    ggrepel::geom_label_repel(aes(label = sidonm, geometry = geometry), 
                              size = 3, stat = "sf_coordinates") +
    theme_void() +
    scale_fill_brewer(palette = "OrRd")
```

